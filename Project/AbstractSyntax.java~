import java.util.*;

abstract class Expression {
    abstract int eval(ValueEnvironment env)
    throws Exception; 
}
class Int extends Expression {
	private int value;
	public Int(int i) {
		value = i;
	}
	public int eval(ValueEnvironment env) throws Exception {
		return value;
	}
}
class Var extends Expression {
	private String name;
	public Var(String s) {
		name = s;
	}
	public int eval(ValueEnvironment env) throws Exception {
		return env.getValue(name);
	}
}
class Sum extends Expression {
	private Expression left, right;
	public Sum(Expression l, Expression r) {
		left = l;
		right = r;
	}
	public int eval(ValueEnvironment env) throws Exception {
		return left.eval(env)+right.eval(env);
	}
}
class Difference extends Expression {
	private Expression left, right;
	public Difference(Expression l, Expression r) throws Exception {
		left = l;
		right = r;
	}
	public int eval(ValueEnvironment env) throws Exception{
		return left.eval(env)-right.eval(env);
	}
}
class Product extends Expression {
	private Expression left, right;
	public Product(Expression l, Expression r) {
		left = l;
		right = r;
	}
	public int eval(ValueEnvironment env) throws Exception {
		return left.eval(env)*right.eval(env);
	}
}
class Division extends Expression {
	private Expression left, right;
	public Division(Expression l, Expression r) {
		left = l;
		right = r;
	}
	public int eval(ValueEnvironment env) throws Exception {
		return left.eval(env)/right.eval(env);
	}
}
